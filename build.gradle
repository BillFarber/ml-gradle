plugins {
	id "java-library"
	id "maven-publish"
	id "maven"
	id "signing"
	id "com.github.jk1.dependency-license-report" version "1.3"
	id "io.snyk.gradle.plugin.snykplugin" version "0.4"
}

group = "com.marklogic"
version = "4.1-SNAPSHOT"

sourceCompatibility = "8"
targetCompatibility = "8"

repositories {
	mavenCentral()
}

dependencies {
  api ('com.marklogic:marklogic-client-api:5.4.0') {
		// This isn't available via mavenCentral with its 2.3 coordinates, so it's excluded
		// and then depended on below via its 2.5 coordinates
		exclude module: "okhttp-digest"
	}
	implementation 'io.github.rburgst:okhttp-digest:2.5'

  api 'com.marklogic:marklogic-xcc:10.0.6.2'
  api 'org.springframework:spring-context:5.3.7'

  implementation 'org.jdom:jdom2:2.0.6'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.1'
	implementation 'org.slf4j:slf4j-api:1.7.30'

  testImplementation "org.junit.jupiter:junit-jupiter:5.7.1"
	testImplementation 'org.springframework:spring-test:5.3.7'

  // Used for testing loading modules from the classpath
  testImplementation files("lib/modules.jar")

	// Forcing Spring to use logback instead of commons-logging
	testImplementation "ch.qos.logback:logback-classic:1.2.3"
	testImplementation "org.slf4j:jcl-over-slf4j:1.7.30"
	testImplementation "org.slf4j:slf4j-api:1.7.30"
}

test {
	useJUnitPlatform()
  testLogging {
    events 'started','passed', 'skipped', 'failed'
    exceptionFormat 'full'
  }
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier "javadoc"
	from javadoc
}
javadoc.failOnError = false

artifacts {
	archives javadocJar, sourcesJar
}
signing {
	sign configurations.archives
}

uploadArchives {
	repositories {
		mavenDeployer {
			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
			repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}
			snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}
			pom.project {
				name '${group}:${project.name}'
				packaging 'jar'
				description 'Library that adds functionality on top of the MarkLogic Java Client'
				url 'https://github.com/marklogic-community/${project.name}'
				scm {
					url 'git@github.com:marklogic-community/${project.name}.git'
					connection 'scm:git@github.com:marklogic-community/${project.name}.git'
					developerConnection 'scm:git@github.com:marklogic-community/${project.name}.git'
				}
				licenses {
					license {
						name 'The Apache License, Version 2.0'
						url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}
				developers {
					developer {
						id 'marklogic'
						name 'MarkLogic Github Contributors'
						email 'general@developer.marklogic.com'
					}
				}
			}
		}
	}
}

publishing {
  publications {
    mainJava(MavenPublication) {
      from components.java
      artifact sourcesJar
		  artifact javadocJar
	  }
  }
}

// See https://github.com/snyk/gradle-plugin for more information
snyk {
	//arguments = '--all-sub-projects'
	severity = 'low'
	api = snykToken
	autoDownload = true
	autoUpdate = true
}
